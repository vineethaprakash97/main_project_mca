<?php
/* 
 * Generated by CRUDigniter v3.2 
 * www.crudigniter.com
 */
 defined('BASEPATH') OR exit('No direct script access allowed');
header('Access-Control-Allow-Origin: *');
class Recovery extends CI_Controller{
    function __construct()
    {
        parent::__construct();
        $this->load->helper('url_helper');
        $this->load->model('Recovery_model');
        $this->load->model('Category_model');
        $this->load->model('Login_model'); 
       
    } 

    /*
     * Listing of recoverys
     */
    function index()
    {
      
        $params['limit'] = RECORDS_PER_PAGE; 
        $params['offset'] = ($this->input->get('per_page')) ? $this->input->get('per_page') : 0;
        
        $config = $this->config->item('pagination');
        $config['base_url'] = site_url('index.php/recovery/index?');
        $config['total_rows'] = $this->Recovery_model->get_all_recovery_count();
        $this->pagination->initialize($config);

        $data['recovery'] = $this->Recovery_model->get_add_recovery_join_query();
        $data['all_category'] = $this->Category_model->get_all_category();
        $data['offset']=$params['offset'];
        $data['_view'] = 'recovery/index';
        $this->load->view('layouts/main',$data);
	 
    }
   

    /*
     * Adding a new recovery
     */
    function add()
    {   
       error_reporting(0);
       $this->load->library('form_validation');
      
       $this->form_validation->set_rules('recovery_title','recovery title','required');
       $this->form_validation->set_rules('category_id','Category','required');
	    
           
        if($this->form_validation->run())     
        {   
          $params = array(
       'recovery_title'=> $this->input->post('recovery_title'),
       'category_id'=> $this->input->post('category_id'),
        
        );
            
        $recovery_id = $this->Recovery_model->add_recovery($params);
            
       ?>
	   <script type="text/javascript">
           alert("Successfully added the recovery details");
           location.href="<?php echo base_url()?>index.php/recovery/index";
       </script>
       
	   <?php 
         
		 }
        else
        {
            $this->load->model('Category_model');
            $data['all_category'] = $this->Category_model->get_all_category();
            $data['_view'] = 'recovery/add';
            $this->load->view('layouts/main',$data);
        }
    }
  
    /*
     * Editing a recovery
     */
    function edit($recovery_id)
    {  
        
        $data['recovery'] = $this->Recovery_model->get_single_recovery($recovery_id);
        // check if the lib_book exists before trying to edit it
        
            $this->load->library('form_validation');
            $this->form_validation->set_rules('recovery_title','recovery title','required');
            $this->form_validation->set_rules('category_id','Category','required');
             
			
			if($this->form_validation->run())     
            {   
               $params = array(
           'recovery_title'=> $this->input->post('recovery_title'),
           'category_id'=> $this->input->post('category_id'),
           
              );

            $this->Recovery_model->update_recovery($recovery_id,$params); 
                ?>
                    <script type="text/javascript">
                       alert("Successfully updated recovery details");
                          location.href="<?php echo base_url()?>index.php/recovery/index";
                    </script>
                <?php            
                
            }
            else
            {
				$this->load->model('Category_model');
				$data['all_category'] = $this->Category_model->get_all_category();
                $data['_view'] = 'recovery/edit';
                $this->load->view('layouts/main',$data);
            }
        
    } 

    /*
     * Deleting recovery
     */
    function remove($recovery_id)
    {
		 
        $recovery = $this->Recovery_model->get_single_recovery($recovery_id);

        // check if the recovery exists before trying to delete it
        if(isset($recovery['recovery_id']))
        {
            $delete_result = $this->Recovery_model->delete_recovery($recovery_id);
			 
            ?>
                    <script type="text/javascript">
                       alert("Successfully deleted");
                          location.href="<?php echo base_url()?>index.php/recovery/index";
                    </script>
                <?php 
            
        }
        else
            show_error('The recovery you are trying to delete does not exist.');
    }
  
  
    
}
